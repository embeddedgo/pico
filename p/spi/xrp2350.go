// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build rp2350

package spi

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/pico/p/mmap"
)

type Periph struct {
	CR0       mmio.R32[CR0]
	CR1       mmio.R32[CR1]
	DR        mmio.R32[uint32]
	SR        mmio.R32[SR]
	CPSR      mmio.R32[uint32]
	IMSC      mmio.R32[INT]
	RIS       mmio.R32[INT]
	MIS       mmio.R32[INT]
	ICR       mmio.R32[INT]
	DMACR     mmio.R32[DMACR]
	_         [1006]uint32
	PERIPHID0 mmio.R32[uint32]
	PERIPHID1 mmio.R32[PERIPHID1]
	PERIPHID2 mmio.R32[PERIPHID2]
	PERIPHID3 mmio.R32[uint32]
	PCELLID0  mmio.R32[uint32]
	PCELLID1  mmio.R32[uint32]
	PCELLID2  mmio.R32[uint32]
	PCELLID3  mmio.R32[uint32]
}

func SPI0() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.SPI0_BASE))) }
func SPI1() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.SPI1_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type CR0 uint32

func DSS_(p *Periph) mmio.RM32[CR0] { return mmio.RM32[CR0]{&p.CR0, DSS} }
func FRF_(p *Periph) mmio.RM32[CR0] { return mmio.RM32[CR0]{&p.CR0, FRF} }
func SPO_(p *Periph) mmio.RM32[CR0] { return mmio.RM32[CR0]{&p.CR0, SPO} }
func SPH_(p *Periph) mmio.RM32[CR0] { return mmio.RM32[CR0]{&p.CR0, SPH} }
func SCR_(p *Periph) mmio.RM32[CR0] { return mmio.RM32[CR0]{&p.CR0, SCR} }

type CR1 uint32

func LBM_(p *Periph) mmio.RM32[CR1] { return mmio.RM32[CR1]{&p.CR1, LBM} }
func SSE_(p *Periph) mmio.RM32[CR1] { return mmio.RM32[CR1]{&p.CR1, SSE} }
func MS_(p *Periph) mmio.RM32[CR1]  { return mmio.RM32[CR1]{&p.CR1, MS} }
func SOD_(p *Periph) mmio.RM32[CR1] { return mmio.RM32[CR1]{&p.CR1, SOD} }

type SR uint32

func TFE_(p *Periph) mmio.RM32[SR] { return mmio.RM32[SR]{&p.SR, TFE} }
func TNF_(p *Periph) mmio.RM32[SR] { return mmio.RM32[SR]{&p.SR, TNF} }
func RNE_(p *Periph) mmio.RM32[SR] { return mmio.RM32[SR]{&p.SR, RNE} }
func RFF_(p *Periph) mmio.RM32[SR] { return mmio.RM32[SR]{&p.SR, RFF} }
func BSY_(p *Periph) mmio.RM32[SR] { return mmio.RM32[SR]{&p.SR, BSY} }

type INT uint32

type DMACR uint32

func RXDMAE_(p *Periph) mmio.RM32[DMACR] { return mmio.RM32[DMACR]{&p.DMACR, RXDMAE} }
func TXDMAE_(p *Periph) mmio.RM32[DMACR] { return mmio.RM32[DMACR]{&p.DMACR, TXDMAE} }

type PERIPHID1 uint32

func PARTNUMBER1_(p *Periph) mmio.RM32[PERIPHID1] {
	return mmio.RM32[PERIPHID1]{&p.PERIPHID1, PARTNUMBER1}
}
func DESIGNER0_(p *Periph) mmio.RM32[PERIPHID1] { return mmio.RM32[PERIPHID1]{&p.PERIPHID1, DESIGNER0} }

type PERIPHID2 uint32

func DESIGNER1_(p *Periph) mmio.RM32[PERIPHID2] { return mmio.RM32[PERIPHID2]{&p.PERIPHID2, DESIGNER1} }
func REVISION_(p *Periph) mmio.RM32[PERIPHID2]  { return mmio.RM32[PERIPHID2]{&p.PERIPHID2, REVISION} }
